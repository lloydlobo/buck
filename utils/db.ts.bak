import { ConnectionStates } from 'mongoose';
var mongoose = require('mongoose');

const connection = { isConnected: ConnectionStates.connected };

async function connect() {
    if (connection.isConnected) {
        console.log('already connected');
        return;
    }

    // Connection queue has few connections.
    if (mongoose.connections.length > 0) {
        connection.isConnected = mongoose.connections[0].readyState;

        // Return if already connected.
        if (connection.isConnected === 1) {
            console.log('use previous connection');
            return;
        }
        // Else disconnect.
        await mongoose.disconnect();
    }

    if (!process.env.MONGODB_URI) {
        throw console.error(
            'Database environment variable MONGODB_URI is undefined!'
        );
    }

    const uri = process.env.MONGODB_URI;
    if (uri === undefined) {
        console.error(uri);
        return;
    }

    const db = await mongoose.connect(uri);

    console.log('new connection');

    connection.isConnected = db.connections[0].readyState;
}

async function disconnect() {
    if (connection.isConnected) {
        const nodeEnv = process.env.NODE_ENV; // 'development' || 'production'

        // Save process resources in development mode,
        // with steady connection.
        if (nodeEnv === 'production') {
            await mongoose.disconnect();
            connection.isConnected = ConnectionStates.disconnected;
        } else {
            console.log('not disconnected');
        }
    }
}

const db = { connect, disconnect };

export default db;
